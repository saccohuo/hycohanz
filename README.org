#+TITLE: hycohanz
#+DATE: <2016-10-12 Wed 19:42>
#+TAGS: Original, hycohanz, readme, hfss, script
#+LAYOUT: post
#+CATEGORIES: Tech

#+OPTIONS: ^:{}
#+OPTIONS: html-postamble:nil

#+INFOJS_OPT: view:nil toc:t ltoc:nil mouse:underline buttons:0 path:http://thomasf.github.io/solarized-css/org-info.min.js
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://thomasf.github.io/solarized-css/solarized-light.min.css" />

* hycohanz
[[http://mradway.github.io/hycohanz/][hycohanz]] is an Open Source (BSD license) Python wrapper interface to the ANSYS HFSS Windows COM API, enabling you to control HFSS from Python. hycohanz simplifies control of HFSS from Python for RF, microwave, and antenna engineers.
* Requirements
- HFSS 15.0. (if you use other version, maybe you should change the =AnsoftHfss.hfssscriptinterface= in =appobject.py= to the specified COM object for your version)
- Python 3.
- pywin32 Windows extension for Python.
* Quick Install
Installation is easy if you already have [[http://www.ansys.com/Products/Simulation+Technology/Electromagnetics/Signal+Integrity/ANSYS+HFSS][HFSS]], [[http://www.python.org/][Python]], and the [[http://sourceforge.net/projects/pywin32/][pywin32]] Windows extensions for Python:

1. Download the [[https://github.com/saccohuo/hycohanz/archive/master.zip][.zip file]] from Github.

2. Unzip to a convenient location.

3. At the Windows command shell prompt, run:
#+BEGIN_SRC shell
> C:\Python27\python setup.py install
#+END_SRC
See [[http://mradway.github.io/hycohanz/install.html][Detailed Installation]] if you don't already have Python installed.
* Minimal Example
#+BEGIN_SRC python
import hycohanz as hfss

[oAnsoftApp, oDesktop] = hfss.setup_interface()

raw_input('Press "Enter" to quit HFSS.>')

hfss.quit_application(oDesktop)

del oDesktop
del oAnsoftApp
#+END_SRC
Dozens more [[https://github.com/saccohuo/hycohanz/tree/devel/examples][examples]] are included in the examples directory of the source distribution.
* Requested Features
** TODO enable to set description of design property
- Function: =add_property= in =property.py=
- Function: =set_variable= in =property.py=
- Function: =get_variables= in =property.py=
** TODO update links in this README
** TODO add function to duplicate along line for the model
idea: use =copy= , =paste= and =move= to complete the required function.
** TODO add function to duplicate around axis for the model
** TODO add function to assign lumped port
The key point is how to solve the integration line for the lumped port.
